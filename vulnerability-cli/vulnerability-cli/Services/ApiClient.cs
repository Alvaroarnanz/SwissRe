using System.Net.Http;
using System.Text;
using System.Text.Json;
using VulnerabilityCLI.Models;

namespace VulnerabilityCLI.Services;

public class ApiClient
{
    private readonly HttpClient _httpClient;

    public ApiClient()
    {
        _httpClient = new HttpClient();
    }
    public ApiClient(HttpClient httpClient)
    {
        _httpClient = httpClient;
    }
    public async Task SendVulnerabilitiesAsync(List<Vulnerability> vulnerabilities, string apiUrl)
    {
        foreach (var vulnerability in vulnerabilities)
        {
            try
            {
                string jsonPayload = JsonSerializer.Serialize(vulnerability);
                var content = new StringContent(jsonPayload, Encoding.UTF8, "application/json");

                var response = await _httpClient.PostAsync(apiUrl, content);
                if (response.IsSuccessStatusCode)
                {
                    Console.WriteLine($"Sucess to send: {vulnerability.Cve}");
                }
                else
                {
                    Console.WriteLine($"Error to send: {vulnerability.Cve} - StatusCode: {response.StatusCode}");
                }
            }
            catch (Exception ex)
            {
                Console.WriteLine($"Error to send. Exception: {vulnerability.Cve} - {ex.Message}");
            }
        }
    }
}
