from flask_pymongo import PyMongo

class VulnerabilityService:
    def __init__(self, mongo):
        self.mongo = mongo
        self.db = mongo.db.vulnerabilities  # Se asume que la colección se llama "vulnerabilities"

    def get_vulnerability_by_cve(self, cve):
        return self.db.find_one({"cve": cve})

    def get_filtered_vulnerabilities(self, filters):
        # Aplica los filtros a la consulta. Si no hay filtros, devuelve todas las vulnerabilidades.
        return list(self.db.find(filters))

    def create_vulnerability(self, data):
        self.db.insert_one(data)  # Inserta el documento en la colección
        return data

    def delete_vulnerability(self, cve):
        result = self.db.delete_one({"cve": cve})
        return result.deleted_count > 0  # Devuelve si se eliminó correctamente
